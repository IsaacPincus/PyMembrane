<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="computemesh_8hpp" kind="file" language="C++">
    <compoundname>computemesh.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">map</includes>
    <includes refid="globaltypes_8hpp" local="yes">../types/globaltypes.hpp</includes>
    <includes refid="pymembvector_8hpp" local="yes">../types/pymembvector.hpp</includes>
    <includedby refid="computemesh_8cpp" local="yes">pymembrane/cppmodule/src/compute/computemesh.cpp</includedby>
    <includedby refid="pybind__export__compute_8hpp" local="yes">pymembrane/cppmodule/src/compute/pybind_export_compute.hpp</includedby>
    <includedby refid="systemclass_8hpp" local="yes">pymembrane/cppmodule/src/system/systemclass.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>pymembrane/cppmodule/src/compute/computemesh.hpp</label>
        <link refid="computemesh_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../types/globaltypes.hpp</label>
        <link refid="globaltypes_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../types/pymembvector.hpp</label>
        <link refid="pymembvector_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>pymembrane/cppmodule/src/compute/computemesh.hpp</label>
        <link refid="computemesh_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pymembrane/cppmodule/src/compute/pybind_export_compute.hpp</label>
        <link refid="pybind__export__compute_8hpp_source"/>
      </node>
      <node id="4">
        <label>pymembrane/cppmodule/src/constraints/constraintarea.hpp</label>
        <link refid="constraintarea_8hpp_source"/>
      </node>
      <node id="5">
        <label>pymembrane/cppmodule/src/constraints/constraintclass.hpp</label>
        <link refid="constraintclass_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pymembrane/cppmodule/src/constraints/constraintvolume.hpp</label>
        <link refid="constraintvolume_8hpp_source"/>
      </node>
      <node id="7">
        <label>pymembrane/cppmodule/src/evolver/evolverclass.hpp</label>
        <link refid="evolverclass_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pymembrane/cppmodule/src/evolver/pybind_export_evolver.hpp</label>
        <link refid="pybind__export__evolver_8hpp_source"/>
      </node>
      <node id="11">
        <label>pymembrane/cppmodule/src/integrators/integrator_brownian_vertex.hpp</label>
        <link refid="integrator__brownian__vertex_8hpp_source"/>
      </node>
      <node id="12">
        <label>pymembrane/cppmodule/src/integrators/integrator_verlet_vertex.hpp</label>
        <link refid="integrator__verlet__vertex_8hpp_source"/>
      </node>
      <node id="10">
        <label>pymembrane/cppmodule/src/integrators/integratorclass.hpp</label>
        <link refid="integratorclass_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>pymembrane/cppmodule/src/integrators/montecarlointegrator.hpp</label>
        <link refid="montecarlointegrator_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>pymembrane/cppmodule/src/integrators/montercarlo_flip_edge.hpp</label>
        <link refid="montercarlo__flip__edge_8hpp_source"/>
      </node>
      <node id="15">
        <label>pymembrane/cppmodule/src/integrators/montercarlo_spin_vertex.hpp</label>
        <link refid="montercarlo__spin__vertex_8hpp_source"/>
      </node>
      <node id="16">
        <label>pymembrane/cppmodule/src/integrators/montercarlo_swap_edge.hpp</label>
        <link refid="montercarlo__swap__edge_8hpp_source"/>
      </node>
      <node id="17">
        <label>pymembrane/cppmodule/src/integrators/montercarlo_swap_vertex.hpp</label>
        <link refid="montercarlo__swap__vertex_8hpp_source"/>
      </node>
      <node id="18">
        <label>pymembrane/cppmodule/src/integrators/montercarlo_vertex.hpp</label>
        <link refid="montercarlo__vertex_8hpp"/>
      </node>
      <node id="19">
        <label>pymembrane/cppmodule/src/mesh/edge_flip.hpp</label>
        <link refid="edge__flip_8hpp_source"/>
      </node>
      <node id="9">
        <label>pymembrane/cppmodule/src/minimizer/fire.hpp</label>
        <link refid="fire_8hpp_source"/>
      </node>
      <node id="20">
        <label>pymembrane/cppmodule/src/minimizer/minimizerclass.hpp</label>
        <link refid="minimizerclass_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>pymembrane/cppmodule/src/potentials/computeforceclass.hpp</label>
        <link refid="computeforceclass_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>pymembrane/cppmodule/src/potentials/potentialBending.hpp</label>
        <link refid="potential_bending_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>pymembrane/cppmodule/src/potentials/potentialBendingHelfrich.hpp</label>
        <link refid="potential_bending_helfrich_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>pymembrane/cppmodule/src/potentials/potentialCauchyGreen.hpp</label>
        <link refid="potential_cauchy_green_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>pymembrane/cppmodule/src/potentials/potentialConstantAreaTriangle.hpp</label>
        <link refid="potential_constant_area_triangle_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pymembrane/cppmodule/src/potentials/potentialDihedralHarmonics.hpp</label>
        <link refid="potential_dihedral_harmonics_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>pymembrane/cppmodule/src/potentials/potentialHarmonic.hpp</label>
        <link refid="potential_harmonic_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>pymembrane/cppmodule/src/potentials/potentialHarmonicSloutskin.hpp</label>
        <link refid="potential_harmonic_sloutskin_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>pymembrane/cppmodule/src/potentials/potentialIsing.hpp</label>
        <link refid="potential_ising_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>pymembrane/cppmodule/src/potentials/potentialLimit.hpp</label>
        <link refid="potential_limit_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>pymembrane/cppmodule/src/potentials/potentialLineTension.hpp</label>
        <link refid="potential_line_tension_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>pymembrane/cppmodule/src/potentials/potentialSubstrate.hpp</label>
        <link refid="potential_substrate_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>pymembrane/cppmodule/src/system/pybind_export_system.hpp</label>
        <link refid="pybind__export__system_8hpp_source"/>
      </node>
      <node id="3">
        <label>pymembrane/cppmodule/src/system/systemclass.hpp</label>
        <link refid="systemclass_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_compute_mesh" prot="public">ComputeMesh</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__computemesh_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__computemesh_hpp__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types/globaltypes.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types/pymembvector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_system_class" kindref="compound">SystemClass</ref>;<sp/></highlight><highlight class="comment">//<sp/>forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_evolver_class" kindref="compound">EvolverClass</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_compute_mesh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_compute_mesh" kindref="compound">ComputeMesh</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="class_compute_mesh_1ae2206d8faa6094faa4623e043d486eb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_compute_mesh_1ae2206d8faa6094faa4623e043d486eb2" kindref="member">ComputeMesh</ref>(<ref refid="class_system_class" kindref="compound">SystemClass</ref><sp/>&amp;system)<sp/>:<sp/>_system(system)<sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_compute_mesh_1a01fbf3ea41eacf6fc6d82ab50fbc53d5" kindref="member">compute_vertex_normals</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vertex_normal_angle_weight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_compute_mesh_1ab3f62e044c17f862e84f457dec6a856a" kindref="member">compute_face_normals</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>pymemb::vector&lt;real&gt;<sp/><ref refid="class_compute_mesh_1a3485440d5034df582d39ea26c9adac64" kindref="member">compute_edge_lengths</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>real<sp/><ref refid="class_compute_mesh_1a1bda94178ca3a941690b30a3b77f2a53" kindref="member">gaussiancurvature_vertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;vertex_index);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>real<sp/><ref refid="class_compute_mesh_1abb01bf7089f605f837bf9c9833b96868" kindref="member">meancurvature_vertex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;vertex_index);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pymemb::vector&lt;real&gt;<sp/><ref refid="class_compute_mesh_1a86623c755a819c22e6f36fddf8e4ff15" kindref="member">gaussiancurvature</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>pymemb::vector&lt;real&gt;<sp/><ref refid="class_compute_mesh_1a9ba8ecac3132d47fb86ff6d5268fcdd7" kindref="member">meancurvature</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>pymemb::vector&lt;real&gt;&gt;<sp/>compute_mesh_curvature(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>pymemb::vector&lt;pymemb::vector&lt;real&gt;&gt;<sp/><ref refid="class_compute_mesh_1ae0239b15648e49160f7a9e588a75a71d" kindref="member">compute_face_metric</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>real<sp/><ref refid="class_compute_mesh_1ab9f1d039272f60ef86e58d7daedde4eb" kindref="member">compute_mesh_volume</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>pymemb::vector&lt;real&gt;<sp/><ref refid="class_compute_mesh_1a755b9eccf9a1c4ee1c559c8f0b9b1594" kindref="member">compute_face_area</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>real<sp/><ref refid="class_compute_mesh_1a5be77f57818856a8c946418390a7158b" kindref="member">compute_mesh_area</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>pymemb::vector&lt;real&gt;<sp/><ref refid="class_compute_mesh_1aeecbaf8c127095e46cc6d02283595612" kindref="member">compute_vertex_area</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>real&gt;<sp/><ref refid="class_compute_mesh_1a806aab7b730a4c6febdf41f82e0d6d51" kindref="member">compute_mesh_energy</ref>(<ref refid="class_evolver_class" kindref="compound">EvolverClass</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>pymemb::vector&lt;real3&gt;<sp/><ref refid="class_compute_mesh_1a258190c333df62c80ed36b135e4d1750" kindref="member">compute_vertex_forces</ref>(<ref refid="class_evolver_class" kindref="compound">EvolverClass</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_tensor_type" kindref="compound">realTensor</ref><sp/><ref refid="class_compute_mesh_1a4aa87d2ae583bcc334416702e55684fb" kindref="member">compute_stresses</ref>(<ref refid="class_evolver_class" kindref="compound">EvolverClass</ref><sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_tensor_type" kindref="compound">realTensor</ref><sp/><ref refid="class_compute_mesh_1a0df02ab4be7567cdb522fb03f70bfedc" kindref="member">get_stresses</ref>(<ref refid="class_evolver_class" kindref="compound">EvolverClass</ref><sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;real&gt;<sp/><ref refid="class_compute_mesh_1a4920fdd93c23e53a94d608fa414b8fdc" kindref="member">compute_pressure</ref>(<ref refid="class_evolver_class" kindref="compound">EvolverClass</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_tensor_type" kindref="compound">realTensor</ref><sp/><ref refid="class_compute_mesh_1ade0cc217fb21e8435988680fe9e55bfd" kindref="member">compute_kinetic_energy_tensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>real<sp/><ref refid="class_compute_mesh_1ae18d3e181ec5478c8b3a2c1971aba279" kindref="member">compute_kinetic_energy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>real<sp/><ref refid="class_compute_mesh_1a35616a0e8c429e9478a48fe4a62880f6" kindref="member">compute_temperature</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_tensor_type" kindref="compound">realTensor</ref><sp/><ref refid="class_compute_mesh_1ae933618d642610e53b40c2dbbd874b12" kindref="member">compute_stresses_virial</ref>(<ref refid="class_evolver_class" kindref="compound">EvolverClass</ref><sp/>&amp;evolver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;computeForAllAtoms);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;realTensor&gt;<sp/><ref refid="class_compute_mesh_1a297da91a8a7c8bc7c9aa73fcb2304eb3" kindref="member">compute_stresses_atom</ref>(<ref refid="class_evolver_class" kindref="compound">EvolverClass</ref><sp/>&amp;evolver,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;computeForAllAtoms);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_system_class" kindref="compound">SystemClass</ref><sp/>&amp;_system;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pymembrane/cppmodule/src/compute/computemesh.hpp"/>
  </compounddef>
</doxygen>
