<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="constraintclass_8hpp" kind="file" language="C++">
    <compoundname>constraintclass.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">math.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="fromstring_8hpp" local="yes">../utils/fromstring.hpp</includes>
    <includes refid="globaltypes_8hpp" local="yes">../types/globaltypes.hpp</includes>
    <includes refid="systemclass_8hpp" local="yes">../system/systemclass.hpp</includes>
    <includes local="no">pybind11/pybind11.h</includes>
    <includedby refid="constraintarea_8hpp" local="yes">pymembrane/cppmodule/src/constraints/constraintarea.hpp</includedby>
    <includedby refid="constraintvolume_8hpp" local="yes">pymembrane/cppmodule/src/constraints/constraintvolume.hpp</includedby>
    <includedby refid="evolverclass_8hpp" local="yes">pymembrane/cppmodule/src/evolver/evolverclass.hpp</includedby>
    <incdepgraph>
      <node id="17">
        <label>../box/box.hpp</label>
        <link refid="box_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>../box/pbc.hpp</label>
        <link refid="pbc_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>../compute/computemesh.hpp</label>
        <link refid="computemesh_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>pymembrane/cppmodule/src/constraints/constraintclass.hpp</label>
        <link refid="constraintclass_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>../dumper/dumper.hpp</label>
        <link refid="dumper_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>../mesh/computegeometry.hpp</label>
        <link refid="computegeometry_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>../mesh/halfedges.hpp</label>
        <link refid="halfedges_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>../mesh/meshoperators.hpp</label>
        <link refid="meshoperators_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>meshproperties.hpp</label>
        <link refid="meshproperties_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>read_mesh.hpp</label>
        <link refid="read__mesh_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../system/systemclass.hpp</label>
        <link refid="systemclass_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../types/globaltypes.hpp</label>
        <link refid="globaltypes_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../types/pymembvector.hpp</label>
        <link refid="pymembvector_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../utils/fromstring.hpp</label>
        <link refid="fromstring_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>cctype</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="22">
        <label>functional</label>
      </node>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>iterator</label>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="29">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="9">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="21">
        <label>typeinfo</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>pymembrane/cppmodule/src/compute/pybind_export_compute.hpp</label>
        <link refid="pybind__export__compute_8hpp_source"/>
      </node>
      <node id="2">
        <label>pymembrane/cppmodule/src/constraints/constraintarea.hpp</label>
        <link refid="constraintarea_8hpp_source"/>
      </node>
      <node id="1">
        <label>pymembrane/cppmodule/src/constraints/constraintclass.hpp</label>
        <link refid="constraintclass_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>pymembrane/cppmodule/src/constraints/constraintvolume.hpp</label>
        <link refid="constraintvolume_8hpp_source"/>
      </node>
      <node id="4">
        <label>pymembrane/cppmodule/src/evolver/evolverclass.hpp</label>
        <link refid="evolverclass_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pymembrane/cppmodule/src/evolver/pybind_export_evolver.hpp</label>
        <link refid="pybind__export__evolver_8hpp_source"/>
      </node>
      <node id="7">
        <label>pymembrane/cppmodule/src/minimizer/fire.hpp</label>
        <link refid="fire_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_constraint_class" prot="public">ConstraintClass</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="constraintclass_8hpp_1ae2d778d2a3b3b1445313fad4af9aa2d1" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_constraint_class" kindref="compound">ConstraintClass</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;ConstraintClass&gt; ConstraintClass_ptr</definition>
        <argsstring></argsstring>
        <name>ConstraintClass_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pymembrane/cppmodule/src/constraints/constraintclass.hpp" line="121" column="25" bodyfile="pymembrane/cppmodule/src/constraints/constraintclass.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__constraintclass_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__constraintclass_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../utils/fromstring.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types/globaltypes.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../system/systemclass.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_constraint_class" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_constraint_class" kindref="compound">ConstraintClass</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_constraint_class" kindref="compound">ConstraintClass</ref>(<ref refid="class_system_class" kindref="compound">SystemClass</ref><sp/>&amp;system)<sp/>:<sp/>_system(system),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1abaf007d717cb31d8d5653ca9f39b1186" kindref="member">m_tol</ref>(1e-6),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" kindref="member">m_target</ref>(0.0),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" kindref="member">m_value</ref>(0.0),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref>(</highlight><highlight class="stringliteral">&quot;EQUAL&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class" kindref="compound">~ConstraintClass</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_constraint_class_1a57dce5dae72428139314e246cbe6e3f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1a57dce5dae72428139314e246cbe6e3f8" kindref="member">enforce</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_constraint_class_1aeb96068041fba466acfa7236bc12b1fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1aeb96068041fba466acfa7236bc12b1fd" kindref="member">compute_normal</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_constraint_class_1a35223eb0fbfedfdc34d5f19f9ad5b5a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1a35223eb0fbfedfdc34d5f19f9ad5b5a6" kindref="member">compute_gradient</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_constraint_class_1a6986ddefadb73db668b8d473dd943278" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1a6986ddefadb73db668b8d473dd943278" kindref="member">compute_ref_gradient</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_constraint_class_1af42efcda7ad28f9bdb93ac980c09c1cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1af42efcda7ad28f9bdb93ac980c09c1cd" kindref="member">is_satisfied</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fabs(<ref refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" kindref="member">m_value</ref><sp/>-<sp/><ref refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" kindref="member">m_target</ref>)<sp/>&lt;<sp/><ref refid="class_constraint_class_1abaf007d717cb31d8d5653ca9f39b1186" kindref="member">m_tol</ref>);<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_constraint_class_1a24af0e5e32672cdfe5a8a2eca60a9c32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1a24af0e5e32672cdfe5a8a2eca60a9c32" kindref="member">should_apply</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref>.compare(</highlight><highlight class="stringliteral">&quot;EQUAL&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref>.compare(</highlight><highlight class="stringliteral">&quot;LESS&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" kindref="member">m_value</ref><sp/>&gt;<sp/><ref refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" kindref="member">m_target</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref>.compare(</highlight><highlight class="stringliteral">&quot;GREATER&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" kindref="member">m_value</ref><sp/>&gt;<sp/><ref refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" kindref="member">m_target</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_constraint_class_1ac6f6a956a2d26c343446e979576bf027" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="class_constraint_class_1ac6f6a956a2d26c343446e979576bf027" kindref="member">info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>value;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;constraint&quot;</highlight><highlight class="normal">]<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">]<sp/>=<sp/>util::to_string(<ref refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" kindref="member">m_value</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">]<sp/>=<sp/>util::to_string(<ref refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" kindref="member">m_target</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;|value-target|&quot;</highlight><highlight class="normal">]<sp/>=<sp/>util::to_string_scientific(<ref refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" kindref="member">m_value</ref><sp/>-<sp/><ref refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" kindref="member">m_target</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;tol&quot;</highlight><highlight class="normal">]<sp/>=<sp/>util::to_string_scientific(<ref refid="class_constraint_class_1abaf007d717cb31d8d5653ca9f39b1186" kindref="member">m_tol</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;is_satisfy&quot;</highlight><highlight class="normal">]<sp/>=<sp/>util::to_string(this-&gt;<ref refid="class_constraint_class_1af42efcda7ad28f9bdb93ac980c09c1cd" kindref="member">is_satisfied</ref>());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>value[</highlight><highlight class="stringliteral">&quot;lambda&quot;</highlight><highlight class="normal">]<sp/>=<sp/>util::to_string(<ref refid="class_constraint_class_1a7f872869d7d89c607d947bec323a9f04" kindref="member">m_lambda</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_constraint_class_1aa355737f9a8c3258e43a22960c23e0a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1aa355737f9a8c3258e43a22960c23e0a2" kindref="member">get_LagrangeMultiplier</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1a7f872869d7d89c607d947bec323a9f04" kindref="member">m_lambda</ref>;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_LagrangeMultiplier(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="class_constraint_class_1a7f872869d7d89c607d947bec323a9f04" kindref="member">m_lambda</ref><sp/>=<sp/>0.0;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_property_common(std::map&lt;std::string,<sp/>std::string&gt;<sp/>&amp;region_map)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;item<sp/>:<sp/>region_map)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>propname<sp/>=<sp/>item.first;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>item.second;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propname.compare(</highlight><highlight class="stringliteral">&quot;tol&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1abaf007d717cb31d8d5653ca9f39b1186" kindref="member">m_tol</ref><sp/>=<sp/>util::from_string_double(value);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propname.compare(</highlight><highlight class="stringliteral">&quot;EQUAL&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propname.compare(</highlight><highlight class="stringliteral">&quot;LESS&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propname.compare(</highlight><highlight class="stringliteral">&quot;GREATER&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;print_warning_property_name(propname);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_default_properties(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_property(std::map&lt;std::string,<sp/>std::map&lt;std::pair&lt;std::string,<sp/>std::string&gt;,<sp/>std::string&gt;&gt;<sp/>&amp;value_map)<sp/>{<sp/>this-&gt;print_warning_calling(</highlight><highlight class="stringliteral">&quot;map&lt;string,<sp/>map&lt;pair&lt;string,<sp/>string&gt;,<sp/>string&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);<sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_property(std::map&lt;std::string,<sp/>std::map&lt;std::string,<sp/>std::string&gt;&gt;<sp/>&amp;value_map)<sp/>{<sp/>this-&gt;print_warning_calling(</highlight><highlight class="stringliteral">&quot;map&lt;string,<sp/>map&lt;string,<sp/>string&gt;&gt;&quot;</highlight><highlight class="normal">);<sp/>};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_property(std::map&lt;std::string,<sp/>std::string&gt;<sp/>&amp;value_map)<sp/>{<sp/>this-&gt;print_warning_calling(</highlight><highlight class="stringliteral">&quot;std::map&lt;std::string,<sp/>std::string&gt;&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_warning_calling_err(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message)<sp/>{<sp/>py::print(</highlight><highlight class="stringliteral">&quot;constraint<sp/>&quot;</highlight><highlight class="normal">,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>message);<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_warning_calling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message)<sp/>{<sp/>py::print(</highlight><highlight class="stringliteral">&quot;constraint<sp/>&quot;</highlight><highlight class="normal">,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cannot<sp/>be<sp/>called<sp/>with<sp/>&quot;</highlight><highlight class="normal">,<sp/>message);<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_warning_property_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message)<sp/>{<sp/>py::print(</highlight><highlight class="stringliteral">&quot;parameter<sp/>&quot;</highlight><highlight class="normal">,<sp/>message,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>part<sp/>of<sp/>&quot;</highlight><highlight class="normal">,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>constraint&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="class_system_class" kindref="compound">SystemClass</ref><sp/>&amp;_system;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="114" refid="class_constraint_class_1abaf007d717cb31d8d5653ca9f39b1186" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1abaf007d717cb31d8d5653ca9f39b1186" kindref="member">m_tol</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1a624e464d7db10fa44d3f0ca73fec9533" kindref="member">m_target</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1adcc6ad49efefc10bd83ce1800fa80d28" kindref="member">m_value</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="class_constraint_class_1a7f872869d7d89c607d947bec323a9f04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_constraint_class_1a7f872869d7d89c607d947bec323a9f04" kindref="member">m_lambda</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_constraint_class_1aa6eb6c4ae488b41ed1b37cd72dfe6848" kindref="member">m_type</ref>;<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ConstraintClass&gt;<sp/>ConstraintClass_ptr;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pymembrane/cppmodule/src/constraints/constraintclass.hpp"/>
  </compounddef>
</doxygen>
